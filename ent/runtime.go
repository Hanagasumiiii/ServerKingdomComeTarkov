// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/Hanagasumiiii/ServerKingdomComeTarkov/ent/player"
	"github.com/Hanagasumiiii/ServerKingdomComeTarkov/ent/schema"
	"github.com/Hanagasumiiii/ServerKingdomComeTarkov/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	playerFields := schema.Player{}.Fields()
	_ = playerFields
	// playerDescMana is the schema descriptor for mana field.
	playerDescMana := playerFields[0].Descriptor()
	// player.DefaultMana holds the default value on creation for the mana field.
	player.DefaultMana = playerDescMana.Default.(int)
	// playerDescHp is the schema descriptor for hp field.
	playerDescHp := playerFields[1].Descriptor()
	// player.DefaultHp holds the default value on creation for the hp field.
	player.DefaultHp = playerDescHp.Default.(int)
	// playerDescPositionX is the schema descriptor for position_x field.
	playerDescPositionX := playerFields[2].Descriptor()
	// player.DefaultPositionX holds the default value on creation for the position_x field.
	player.DefaultPositionX = playerDescPositionX.Default.(float64)
	// playerDescPositionY is the schema descriptor for position_y field.
	playerDescPositionY := playerFields[3].Descriptor()
	// player.DefaultPositionY holds the default value on creation for the position_y field.
	player.DefaultPositionY = playerDescPositionY.Default.(float64)
	// playerDescPositionZ is the schema descriptor for position_z field.
	playerDescPositionZ := playerFields[4].Descriptor()
	// player.DefaultPositionZ holds the default value on creation for the position_z field.
	player.DefaultPositionZ = playerDescPositionZ.Default.(float64)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
