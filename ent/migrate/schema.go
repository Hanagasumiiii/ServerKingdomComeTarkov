// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PlayersColumns holds the columns for the "players" table.
	PlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "mana", Type: field.TypeInt, Default: 100},
		{Name: "hp", Type: field.TypeInt, Default: 100},
		{Name: "position_x", Type: field.TypeFloat64, Default: 0},
		{Name: "position_y", Type: field.TypeFloat64, Default: 0},
		{Name: "position_z", Type: field.TypeFloat64, Default: 0},
		{Name: "inventory", Type: field.TypeJSON, Nullable: true},
		{Name: "user_player", Type: field.TypeInt, Unique: true},
	}
	// PlayersTable holds the schema information for the "players" table.
	PlayersTable = &schema.Table{
		Name:       "players",
		Columns:    PlayersColumns,
		PrimaryKey: []*schema.Column{PlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "players_users_player",
				Columns:    []*schema.Column{PlayersColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PlayersTable,
		UsersTable,
	}
)

func init() {
	PlayersTable.ForeignKeys[0].RefTable = UsersTable
}
